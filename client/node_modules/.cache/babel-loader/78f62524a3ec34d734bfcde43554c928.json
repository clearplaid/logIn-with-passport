{"ast":null,"code":"var _jsxFileName = \"/home/scott/Desktop/login/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Axios from 'axios'; // import API from \"./utils/API\";\n// components\n\nimport Nav from \"./components/Nav/nav\";\nimport Home from \"./pages/Home\";\nimport SignUp from \"./components/SignUp/signup\";\nimport Profile from \"./pages/Profile\"; // import Guild from \"./pages/Guild\"\n// import Search from \"./pages/Search\";\n// import Footer from \"./components/Footer/footer\";\n\nimport LogIn from \"./components/LogIn/login\"; // style\n\nimport \"./App.css\";\n\nrequire('dotenv').config();\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.updateUser = userObject => {\n      this.setState(userObject);\n    };\n\n    this.getUser = () => {\n      Axios.get('/user/').then(response => {\n        console.log('Get user response: ');\n        console.log(response.data);\n\n        if (response.data.user) {\n          console.log('Get User: There is a user saved in the server session: ');\n          this.setState({\n            loggedIn: true,\n            username: response.data.user.username\n          });\n        } else {\n          console.log('Get user: no user');\n          this.setState({\n            loggedIn: false,\n            username: ''\n          });\n        }\n      });\n    };\n\n    this.state = {\n      loggedIn: false,\n      username: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      updateUser: this.updateUser,\n      loggedIn: this.state.loggedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), \"greet user if logged in:\", this.state.loggedIn && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Join the party, \", this.state.username, \"!\"), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      component: SignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => React.createElement(LogIn, {\n        updateUser: this.updateUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/profile\",\n      render: () => React.createElement(Profile, {\n        updateUser: this.updateUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/scott/Desktop/login/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Axios","Nav","Home","SignUp","Profile","LogIn","require","config","App","constructor","updateUser","userObject","setState","getUser","get","then","response","console","log","data","user","loggedIn","username","state","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Axios from 'axios';\n// import API from \"./utils/API\";\n// components\nimport Nav from \"./components/Nav/nav\";\nimport Home from \"./pages/Home\";\nimport SignUp from \"./components/SignUp/signup\";\nimport Profile from \"./pages/Profile\";\n// import Guild from \"./pages/Guild\"\n// import Search from \"./pages/Search\";\n// import Footer from \"./components/Footer/footer\";\nimport LogIn from \"./components/LogIn/login\";\n// style\nimport \"./App.css\";\n\nrequire('dotenv').config();\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      loggedIn: false,\n      username: ''\n    }\n  }\n\n  componentDidMount() {\n    this.getUser()\n  }\n  updateUser = userObject => {\n    this.setState(userObject)\n  }\n    \n  getUser = () => {\n    Axios.get('/user/').then(response => {\n      console.log('Get user response: ')\n      console.log(response.data)\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ')\n\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username\n        })\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          loggedIn: false,\n          username: ''\n        })\n      }\n    })\n  }\n\nrender() {\n  return (\n    <Router>\n      <div>\n        <Nav updateUser={this.updateUser} loggedIn={this.state.loggedIn} />\n        greet user if logged in: \n        {this.state.loggedIn &&\n          <p>Join the party, {this.state.username}!</p>\n        }\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route exact path=\"/login\" render={() =>\n            <LogIn\n              updateUser={this.updateUser}\n            />} />\n          {/* <Route exact path=\"/search\" component={Search} /> */}\n          <Route path=\"/profile\" render={() =>\n            <Profile\n              updateUser={this.updateUser}\n            />} />\n          {/* <Route exact path=\"/guild\" render={() =>\n            <Guild\n              updateUser={this.updateUser}\n            />} /> */}\n        </Switch>\n        {/* <Footer /> */}\n      </div>\n    </Router>\n  );\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}